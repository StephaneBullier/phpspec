diff --git a/spec/Entity/EnclosureSpec.php b/spec/Entity/EnclosureSpec.php
index 733d674..ba22f22 100644
--- a/spec/Entity/EnclosureSpec.php
+++ b/spec/Entity/EnclosureSpec.php
@@ -23,6 +23,8 @@ class EnclosureSpec extends ObjectBehavior
 
     function it_should_be_able_to_add_dinosaurs()
     {
+        $this->beConstructedWith(true);
+
         $this->addDinosaur(new Dinosaur());
         $this->addDinosaur(new Dinosaur());
 
@@ -31,6 +33,8 @@ class EnclosureSpec extends ObjectBehavior
 
     function it_should_not_allow_to_add_carnivorous_dinosaurs_to_non_carnivorous_enclosure()
     {
+        $this->beConstructedWith(true);
+
         $this->addDinosaur(new Dinosaur());
 
         $this
@@ -40,6 +44,8 @@ class EnclosureSpec extends ObjectBehavior
 
     function it_should_not_allow_to_add_dinosaurs_to_unsecure_enclosures()
     {
+        $this->beConstructedWith(false);
+
         $this
             ->shouldThrow(new DinosaursAreRunningRampantException('Are you craaazy?!?'))
             ->duringAddDinosaur(new Dinosaur('Velociraptor', true));
diff --git a/src/Entity/Enclosure.php b/src/Entity/Enclosure.php
index 4dc8069..1b880eb 100644
--- a/src/Entity/Enclosure.php
+++ b/src/Entity/Enclosure.php
@@ -13,6 +13,13 @@ class Enclosure
     /** @var Security[]|iterable */
     private $securities = [];
 
+    public function __construct(bool $withBasicSecurity = false)
+    {
+        if ($withBasicSecurity) {
+            $this->addSecurity(new Security('Fence', true, $this));
+        }
+    }
+
     public function getDinosaurs(): iterable
     {
         return $this->dinosaurs;
@@ -46,4 +53,9 @@ class Enclosure
 
         return false;
     }
+
+    public function addSecurity(Security $security)
+    {
+        $this->securities[] = $security;
+    }
 }
