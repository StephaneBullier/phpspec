diff --git a/spec/Service/EnclosureBuilderServiceSpec.php b/spec/Service/EnclosureBuilderServiceSpec.php
index 2a7114b..40c9cf0 100644
--- a/spec/Service/EnclosureBuilderServiceSpec.php
+++ b/spec/Service/EnclosureBuilderServiceSpec.php
@@ -2,9 +2,12 @@
 
 namespace spec\App\Service;
 
+use App\Entity\Dinosaur;
 use App\Entity\Enclosure;
+use App\Factory\DinosaurFactory;
 use App\Service\EnclosureBuilderService;
 use PhpSpec\ObjectBehavior;
+use Prophecy\Argument;
 
 class EnclosureBuilderServiceSpec extends ObjectBehavior
 {
@@ -13,11 +16,23 @@ class EnclosureBuilderServiceSpec extends ObjectBehavior
         $this->shouldHaveType(EnclosureBuilderService::class);
     }
 
-    function it_builds_enclosure_with_dinosaurs()
+    function it_builds_enclosure_with_dinosaurs(DinosaurFactory $dinosaurFactory)
     {
+        $this->beConstructedWith($dinosaurFactory);
+
+        $dino1 = new Dinosaur('Velociraptor', true);
+        $dino1->setLength(4);
+        $dino2 = new Dinosaur('Velociraptor', true);
+        $dino2->setLength(8);
+        $dinosaurFactory->growVelociraptor(Argument::any())->willReturn(
+            $dino1,
+            $dino2
+        )->shouldBeCalledTimes(2);
+
         $enclosure = $this->buildEnclosure(1, 2);
 
         $enclosure->shouldBeAnInstanceOf(Enclosure::class);
         $enclosure->getIsSecurityActive()->shouldReturn(true);
+        $enclosure->getDinosaurs()[0]->getLength()->shouldReturn(4);
     }
 }
diff --git a/src/Service/EnclosureBuilderService.php b/src/Service/EnclosureBuilderService.php
index 376565c..e0674b0 100644
--- a/src/Service/EnclosureBuilderService.php
+++ b/src/Service/EnclosureBuilderService.php
@@ -4,9 +4,17 @@ namespace App\Service;
 
 use App\Entity\Enclosure;
 use App\Entity\Security;
+use App\Factory\DinosaurFactory;
 
 class EnclosureBuilderService
 {
+    private $dinosaurFactory;
+
+    public function __construct(DinosaurFactory $dinosaurFactory)
+    {
+        $this->dinosaurFactory = $dinosaurFactory;
+    }
+
     public function buildEnclosure(
         int $numberOfSecuritySystems = 1,
         int $numberOfDinosaurs = 3
@@ -15,6 +23,7 @@ class EnclosureBuilderService
         $enclosure = new Enclosure();
 
         $this->addSecuritySystems($numberOfSecuritySystems, $enclosure);
+        $this->addDinosaurs($numberOfDinosaurs, $enclosure);
 
         return $enclosure;
     }
@@ -28,4 +37,13 @@ class EnclosureBuilderService
             $enclosure->addSecurity($security);
         }
     }
+
+    private function addDinosaurs(int $numberOfDinosaurs, Enclosure $enclosure)
+    {
+        for ($i = 0; $i < $numberOfDinosaurs; $i++) {
+            $enclosure->addDinosaur(
+                $this->dinosaurFactory->growVelociraptor(random_int(1, 15))
+            );
+        }
+    }
 }
